plugins {
    id 'java'
}

def gitExec = { List<String> args ->
    ByteArrayOutputStream out = new ByteArrayOutputStream()
    exec {
        commandLine = ['git'] + args
        standardOutput = out
        ignoreExitValue = true
    }
    String s = out.toString().trim()
    return s ? s : null
}

ext {
    gitCommitId = gitExec(['rev-parse', '--short', 'HEAD'])
    gitCommitTime = gitExec(['log', '-1', '--format=%cI', 'HEAD'])
}

println "--> Last commit id:   ${gitCommitId}"
println "--> Last commit time: ${gitCommitTime}"

allprojects {
    repositories {
        mavenCentral()
    }

    // Version of all profiler components
    group 'com.github.petarov'
    version '0.0.1'
    ext.classifier = 'SNAPSHOT'
    ext.copyright = 'MIT License, Copyright (c) 2025 Petar Petrov'

    java {
//        modularity.inferModulePath = true
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    jar {
        archiveClassifier.set(project.ext.classifier)
        manifest {
            attributes(
                    "Implementation-Title": project.name,
                    "Implementation-Version": project.version,
                    "Implementation-Id": "${gitCommitId}",
                    "Implementation-LastModified": "${gitCommitTime}"
            )
        }
    }

    tasks.register('javadocJar', Jar) {
        dependsOn javadoc
        archiveClassifier.set('javadoc')
        from tasks.javadoc.destinationDir
    }
}