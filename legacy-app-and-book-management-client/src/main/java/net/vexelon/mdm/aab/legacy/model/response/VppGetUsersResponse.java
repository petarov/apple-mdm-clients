package net.vexelon.mdm.aab.legacy.model.response;

import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.PropertyNamingStrategies;
import com.fasterxml.jackson.databind.annotation.JsonNaming;
import net.vexelon.mdm.aab.legacy.model.VppUser;
import jakarta.annotation.Nonnull;

import java.util.List;

/**
 * The response from the usersâ€™ details service.
 *
 * @see <a href="https://developer.apple.com/documentation/devicemanagement/getvppusersresponse">GetVppUsersResponse</a>
 * @see <a href="https://developer.apple.com/documentation/devicemanagement/retrieving-a-large-record-set#Batched-Responses">Batched Responses</a>
 */
@JsonNaming(PropertyNamingStrategies.LowerCamelCaseStrategy.class)
public class VppGetUsersResponse implements VppHasResponse {

	@JsonUnwrapped
	private VppResponse response;

	private int batchCount;

	@JsonSetter(nulls = Nulls.AS_EMPTY)
	private String batchToken = "";

	@JsonSetter(nulls = Nulls.AS_EMPTY)
	private String totalBatchCount = "";

	private int totalCount;

	@JsonSetter(nulls = Nulls.AS_EMPTY)
	private List<VppUser> users = List.of();

	/**
	 * @return {@link VppResponse}
	 */
	@Nonnull
	@Override
	public VppResponse getResponse() {
		return response;
	}

	public void setResponse(VppResponse response) {
		this.response = response;
	}

	/**
	 * the number of users returned in the current batch
	 *
	 * @return the number of users returned in the current batch
	 */
	public int getBatchCount() {
		return batchCount;
	}

	public void setBatchCount(int batchCount) {
		this.batchCount = batchCount;
	}

	/**
	 * Use this batchToken value in subsequent requests to get the next batch. A batchToken value is
	 * generated by the server and can be several kilobytes in size.
	 *
	 * @return the batchToken for fetching the next batch
	 */
	@Nonnull
	public String getBatchToken() {
		return batchToken;
	}

	public void setBatchToken(@Nonnull String batchToken) {
		this.batchToken = batchToken;
	}

	/**
	 * @return the total number of round trips needed to get the complete result set
	 */
	@Nonnull
	public String getTotalBatchCount() {
		return totalBatchCount;
	}

	public void setTotalBatchCount(@Nonnull String totalBatchCount) {
		this.totalBatchCount = totalBatchCount;
	}

	/**
	 * @return an estimate of the total number of users that will be returned. This value is returned for
	 * requests that don't include batchToken and for the request that started the batch process
	 * (the listing request issued with no tokens). The actual number of users returned can be
	 * different by the time the client has finished retrieving all records.
	 */
	public int getTotalCount() {
		return totalCount;
	}

	public void setTotalCount(int totalCount) {
		this.totalCount = totalCount;
	}

	/**
	 * @return a list of users managed by the provided sToken
	 */
	@Nonnull
	public List<VppUser> getUsers() {
		return users;
	}

	public void setUsers(@Nonnull List<VppUser> users) {
		this.users = users;
	}

	@Override
	public String toString() {
		return "VppGetUsersResponse{" + "response=" + response + ", batchCount=" + batchCount + ", batchToken='"
				+ batchToken + '\'' + ", totalBatchCount='" + totalBatchCount + '\'' + ", totalCount=" + totalCount
				+ ", users=" + users + '}';
	}
}
